{"ast":null,"code":"import _slicedToArray from\"D:\\\\Vrit-tech-task\\\\kanban-board-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useContext,useEffect}from\"react\";import{BoardContext}from\"./Board\";import{Card}from\"react-bootstrap\";import TaskForm from\"./New Task/TaskForm\";var formateDate=function formateDate(date){var months=[\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];var month=months[date.getMonth()];var day=\"\"+date.getDate();if(day.length<2)day=\"0\"+day;return month+\" \"+day+\", \"+date.getFullYear();};var initialEditedValues={title:\"\",description:\"\",startDate:new Date(),endDate:new Date()};function CardItem(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];var _useState3=useState(initialEditedValues),_useState4=_slicedToArray(_useState3,2),editedValues=_useState4[0],setFormValues=_useState4[1];var handleClose=function handleClose(){return setShow(false);};var _useContext=useContext(BoardContext),taskState=_useContext.taskState,onDeletingTask=_useContext.onDeletingTask,onUpdatingTask=_useContext.onUpdatingTask;var handleShow=function handleShow(){setShow(true);};var clickHandler=function clickHandler(type){if(type===\"edit\"){var formValues=taskState.find(function(task){return task.id===props.task.id;});setFormValues(formValues);handleShow();}else if(type===\"delete\"){onDeletingTask(props.task.id);}};var handleUpdate=function handleUpdate(values,submitProps){submitProps.setSubmitting(false);onUpdatingTask(values);setShow(false);submitProps.resetForm();};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TaskForm,{editedValues:editedValues,taskState:\"Update\",show:show,handleClose:handleClose,onSubmit:handleUpdate}),/*#__PURE__*/React.createElement(Card,{key:props.task.id,className:\"card-task\"},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,props.task.title,\" \",/*#__PURE__*/React.createElement(\"div\",{className:\"card-task-option pull-right\"},/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(){return clickHandler(\"edit\");}},/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-edit\"})),\"\\xA0\",/*#__PURE__*/React.createElement(\"a\",{onClick:function onClick(){return clickHandler(\"delete\");}},/*#__PURE__*/React.createElement(\"i\",{className:\"fas fa-trash\"})))),/*#__PURE__*/React.createElement(\"table\",null,/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{className:\"font-weight-bold\"},\"Start Date:\"),/*#__PURE__*/React.createElement(\"td\",null,formateDate(props.task.startDate))),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",{className:\"font-weight-bold\"},\"Due Date:\"),/*#__PURE__*/React.createElement(\"td\",{className:\"pull-right\"},formateDate(props.task.endDate))))))));}export default CardItem;","map":{"version":3,"sources":["D:/Vrit-tech-task/kanban-board-react/src/components/Board/CardItem.js"],"names":["React","useState","useContext","useEffect","BoardContext","Card","TaskForm","formateDate","date","months","month","getMonth","day","getDate","length","getFullYear","initialEditedValues","title","description","startDate","Date","endDate","CardItem","props","show","setShow","editedValues","setFormValues","handleClose","taskState","onDeletingTask","onUpdatingTask","handleShow","clickHandler","type","formValues","find","task","id","handleUpdate","values","submitProps","setSubmitting","resetForm"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport { BoardContext } from \"./Board\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport TaskForm from \"./New Task/TaskForm\";\r\nconst formateDate = (date) => {\r\n  var months = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n\r\n  var month = months[date.getMonth()];\r\n  var day = \"\" + date.getDate();\r\n\r\n  if (day.length < 2) day = \"0\" + day;\r\n\r\n  return month + \" \" + day + \", \" + date.getFullYear();\r\n};\r\n\r\nconst initialEditedValues = {\r\n  title: \"\",\r\n  description: \"\",\r\n  startDate: new Date(),\r\n  endDate: new Date(),\r\n};\r\n \r\nfunction CardItem(props) {\r\n  const [show, setShow] = useState(false);\r\n  const [editedValues, setFormValues] = useState(initialEditedValues);\r\n  const handleClose = () => setShow(false);\r\n  const { taskState, onDeletingTask, onUpdatingTask } = useContext(\r\n    BoardContext\r\n  );\r\n\r\n  const handleShow = () => {\r\n    setShow(true);\r\n  };\r\n\r\n  const clickHandler = (type) => {\r\n    if (type === \"edit\") {\r\n     var formValues=  taskState.find((task) => {\r\n       return task.id===props.task.id\r\n      });\r\n      setFormValues(formValues);\r\n      handleShow();\r\n    } else if (type === \"delete\") {\r\n      onDeletingTask(props.task.id);\r\n    }\r\n  };\r\n\r\n  const handleUpdate = (values, submitProps) => {\r\n    submitProps.setSubmitting(false);\r\n    onUpdatingTask(values);\r\n    setShow(false);\r\n    submitProps.resetForm();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TaskForm\r\n        editedValues={editedValues}\r\n        taskState=\"Update\"\r\n        show={show}\r\n        handleClose={handleClose}\r\n        onSubmit={handleUpdate}\r\n      ></TaskForm>\r\n      <Card key={props.task.id} className=\"card-task\">\r\n        <Card.Body>\r\n          <Card.Title>\r\n            {props.task.title}{\" \"}\r\n            <div className=\"card-task-option pull-right\">\r\n              <a onClick={() => clickHandler(\"edit\")}>\r\n                <i className=\"fas fa-edit\"></i>\r\n              </a>\r\n              &nbsp;\r\n              <a onClick={() => clickHandler(\"delete\")}>\r\n                <i className=\"fas fa-trash\"></i>\r\n              </a>\r\n            </div>\r\n          </Card.Title>\r\n\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td className=\"font-weight-bold\">Start Date:</td>\r\n                <td>{formateDate(props.task.startDate)}</td>\r\n              </tr>\r\n              <tr>\r\n                <td className=\"font-weight-bold\">Due Date:</td>\r\n                <td className=\"pull-right\">\r\n                  {formateDate(props.task.endDate)}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CardItem;\r\n"]},"metadata":{},"sourceType":"module"}