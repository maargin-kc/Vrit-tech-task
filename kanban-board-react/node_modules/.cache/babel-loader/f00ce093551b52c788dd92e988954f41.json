{"ast":null,"code":"import _slicedToArray from\"D:\\\\Vrit-tech-task\\\\kanban-board-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"D:\\\\Vrit-tech-task\\\\kanban-board-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import React,{useState,useEffect,useReducer,createContext}from\"react\";import NewTask from\"./New Task/NewTask\";import BoardLanes from\"./BoardLanes\";import\"./Board.css\";var stagesData=[{name:\"Planning\",id:1},{name:\"In Progress\",id:2},{name:\"Review\",id:3},{name:\"Testing\",id:4},{name:\"Launch\",id:5}];var taskData=[{id:1,title:\"Task 1\",description:\"Testing Task 1\",stage:1,startDate:new Date(2020,3,1),endDate:new Date(2020,3,20)},{id:2,title:\"Task 2\",description:\"Just Test 2\",stage:1,startDate:new Date(2020,2,25),endDate:new Date(2020,3,25)},{id:3,title:\"Task 3\",description:\"Just Test\",stage:2,startDate:new Date(2020,1,1),endDate:new Date(2020,1,25)},{id:4,title:\"Task 4\",description:\"Just Test\",stage:3,startDate:new Date(2020,0,5),endDate:new Date(2020,1,15)},{id:5,title:\"Task 5\",description:\"Just Test\",stage:4,startDate:new Date(2020,2,5),endDate:new Date(2020,3,12)},{id:5,title:\"Task 5\",description:\"Just Test\",stage:5,startDate:new Date(2020,2,5),endDate:new Date(2020,3,12)}];export var BoardContext=createContext({});function reducer(state,action){switch(action.type){case\"ON_DROP\":var droppedTask=action.payload;var updatedTasks=state.map(function(task){if(task.id===droppedTask.id){return droppedTask;}return task;});return updatedTasks;case\"LOAD_DATA\":return action.payload;case\"ADD_NEW\":return[].concat(_toConsumableArray(state),[action.payload]);case\"ON_DELETE\":return state.filter(function(task){return task.id!==action.payload;});default:return state;}}function Board(){var _useReducer=useReducer(reducer,taskData),_useReducer2=_slicedToArray(_useReducer,2),taskState=_useReducer2[0],dispatch=_useReducer2[1];var _useState=useState(stagesData),_useState2=_slicedToArray(_useState,2),stages=_useState2[0],setStage=_useState2[1];useEffect(function(){dispatch({type:\"LOAD_DATA\",payload:taskState});},[taskState,stages]);var onDragStartHandler=function onDragStartHandler(event,taskId,stageId){var data={taskId:taskId,stageId:stageId};event.dataTransfer.setData(\"text/plain\",JSON.stringify(data));event.dataTransfer.effectAllowed=\"move\";//event.dataTransfer.setData(\"taskName\", taskName);\n};var onTaskContainerDragStartHandler=function onTaskContainerDragStartHandler(event,laneId){var fromBox=JSON.stringify({laneId:laneId});event.dataTransfer.setData(\"laneId\",fromBox);};var onTaskContainerDragOverHandler=function onTaskContainerDragOverHandler(event){if(event.dataTransfer&&event.dataTransfer.types[0]===\"text/plain\"){event.preventDefault();}};var onTaskContainerDropHandler=function onTaskContainerDropHandler(event,droppedLaneId){/*  let fromLane:any = JSON.parse(event.dataTransfer.getData(\"laneId\"));\r\n   swapStages(fromLane.laneId,droppedLaneId) */};var swapStages=function swapStages(fromLane,toLane){/*  const filterStage = stages.filter((x) => x.id === fromLane);\r\n      filterStage[0].id=toLane;\r\n      setStage([...stages,filterStage[0]]) */};var onDragOverHandler=function onDragOverHandler(event){if(event.dataTransfer&&event.dataTransfer.types[0]===\"text/plain\"){event.preventDefault();}};var onDropHandler=function onDropHandler(event,droppedStageId){var droppedData=event.dataTransfer.getData(\"text/plain\");droppedData=JSON.parse(droppedData);var filterTask=taskState.filter(function(x){return x.id===droppedData.taskId;});filterTask[0].stage=droppedStageId;dispatch({type:\"ON_DROP\",payload:filterTask[0]});};var onAddingNewTask=function onAddingNewTask(dataFromChild){dataFromChild.stage=1;dataFromChild.id=taskState.length+1;dispatch({type:\"ADD_NEW\",payload:dataFromChild});};var onUpdatingTask=function onUpdatingTask(dataFromChild){console.log(dataFromChild);dispatch({type:\"ON_DROP\",payload:dataFromChild});};var onDeletingTask=function onDeletingTask(taskId){dispatch({type:\"ON_DELETE\",payload:taskId});};var ContextData={taskState:taskState,onDragStartHandler:onDragStartHandler,onDragOverHandler:onDragOverHandler,onDropHandler:onDropHandler,onUpdatingTask:onUpdatingTask,onDeletingTask:onDeletingTask,onTaskContainerDragStartHandler:onTaskContainerDragStartHandler,onTaskContainerDropHandler:onTaskContainerDropHandler,onTaskContainerDragOverHandler:onTaskContainerDragOverHandler};return/*#__PURE__*/React.createElement(\"div\",{className:\"container-fluid pt-3\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},/*#__PURE__*/React.createElement(NewTask,{addNewTask:onAddingNewTask}))),/*#__PURE__*/React.createElement(\"hr\",null),/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col-12\"},/*#__PURE__*/React.createElement(BoardContext.Provider,{value:ContextData},/*#__PURE__*/React.createElement(BoardLanes,{stages:stages})))));}export default Board;","map":{"version":3,"sources":["D:/Vrit-tech-task/kanban-board-react/src/components/Board/Board.js"],"names":["React","useState","useEffect","useReducer","createContext","NewTask","BoardLanes","stagesData","name","id","taskData","title","description","stage","startDate","Date","endDate","BoardContext","reducer","state","action","type","droppedTask","payload","updatedTasks","map","task","filter","Board","taskState","dispatch","stages","setStage","onDragStartHandler","event","taskId","stageId","data","dataTransfer","setData","JSON","stringify","effectAllowed","onTaskContainerDragStartHandler","laneId","fromBox","onTaskContainerDragOverHandler","types","preventDefault","onTaskContainerDropHandler","droppedLaneId","swapStages","fromLane","toLane","onDragOverHandler","onDropHandler","droppedStageId","droppedData","getData","parse","filterTask","x","onAddingNewTask","dataFromChild","length","onUpdatingTask","console","log","onDeletingTask","ContextData"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer, createContext } from \"react\";\r\nimport NewTask from \"./New Task/NewTask\";\r\nimport BoardLanes from \"./BoardLanes\";\r\nimport \"./Board.css\";\r\nconst stagesData = [\r\n  { name: \"Planning\", id: 1 },\r\n  { name: \"In Progress\", id: 2 },\r\n  { name: \"Review\", id: 3 },\r\n  { name: \"Testing\", id: 4 },\r\n  { name: \"Launch\", id: 5 },\r\n];\r\nconst taskData = [\r\n  {\r\n    id: 1,\r\n    title: \"Task 1\",\r\n    description: \"Testing Task 1\",\r\n    stage: 1,\r\n    startDate: new Date(2020, 3, 1),\r\n    endDate: new Date(2020, 3, 20),\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Task 2\",\r\n    description: \"Just Test 2\",\r\n    stage: 1,\r\n    startDate: new Date(2020, 2, 25),\r\n    endDate: new Date(2020, 3, 25),\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Task 3\",\r\n    description: \"Just Test\",\r\n    stage: 2,\r\n    startDate: new Date(2020, 1, 1),\r\n    endDate: new Date(2020, 1, 25),\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Task 4\",\r\n    description: \"Just Test\",\r\n    stage: 3,\r\n    startDate: new Date(2020, 0, 5),\r\n    endDate: new Date(2020, 1, 15),\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"Task 5\",\r\n    description: \"Just Test\",\r\n    stage: 4,\r\n    startDate: new Date(2020, 2, 5),\r\n    endDate: new Date(2020, 3, 12),\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"Task 5\",\r\n    description: \"Just Test\",\r\n    stage: 5,\r\n    startDate: new Date(2020, 2, 5),\r\n    endDate: new Date(2020, 3, 12),\r\n  },\r\n];\r\n\r\n \r\nexport const BoardContext = createContext({});\r\n\r\nfunction reducer(state, action) {\r\n  switch (action.type) {\r\n    case \"ON_DROP\":\r\n      const droppedTask = action.payload;\r\n      const updatedTasks = state.map((task) => {\r\n        if (task.id === droppedTask.id) {\r\n          return droppedTask;\r\n        }\r\n        return task;\r\n      });\r\n      return updatedTasks;\r\n    case \"LOAD_DATA\":\r\n      return action.payload;\r\n    case \"ADD_NEW\":\r\n      return [...state, action.payload];\r\n    case \"ON_DELETE\":\r\n      return state.filter((task) => task.id !== action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nfunction Board() {\r\n  const [taskState, dispatch] = useReducer(reducer, taskData);\r\n  const [stages, setStage] = useState(stagesData);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: \"LOAD_DATA\", payload: taskState });\r\n  }, [taskState, stages]);\r\n\r\n  const onDragStartHandler = (\r\n    event,\r\n    taskId,\r\n    stageId\r\n  ) => {\r\n    var data = {\r\n      taskId: taskId,\r\n      stageId: stageId,\r\n    };\r\n    event.dataTransfer.setData(\"text/plain\", JSON.stringify(data));\r\n    event.dataTransfer.effectAllowed = \"move\";\r\n    //event.dataTransfer.setData(\"taskName\", taskName);\r\n  };\r\n\r\n  const onTaskContainerDragStartHandler = (event,laneId) => {\r\n    let fromBox = JSON.stringify({ laneId: laneId });\r\n    event.dataTransfer.setData(\"laneId\", fromBox);\r\n  };\r\n  const onTaskContainerDragOverHandler = (event) => {\r\n    if (event.dataTransfer && event.dataTransfer.types[0] === \"text/plain\") {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  const onTaskContainerDropHandler = (event, droppedLaneId) => {\r\n  /*  let fromLane:any = JSON.parse(event.dataTransfer.getData(\"laneId\"));\r\n   swapStages(fromLane.laneId,droppedLaneId) */\r\n  };\r\n  \r\n const swapStages = (fromLane, toLane) => {\r\n\r\n     /*  const filterStage = stages.filter((x) => x.id === fromLane);\r\n      filterStage[0].id=toLane;\r\n      setStage([...stages,filterStage[0]]) */\r\n  };\r\n  const onDragOverHandler = (event) => {\r\n    if (event.dataTransfer && event.dataTransfer.types[0] === \"text/plain\") {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  const onDropHandler = (event, droppedStageId) => {\r\n    let droppedData = event.dataTransfer.getData(\"text/plain\");\r\n    droppedData = JSON.parse(droppedData);\r\n    const filterTask = taskState.filter((x) => x.id === droppedData.taskId);\r\n    filterTask[0].stage = droppedStageId;\r\n    dispatch({ type: \"ON_DROP\", payload: filterTask[0] });\r\n  };\r\n\r\n  const onAddingNewTask = (dataFromChild) => {\r\n    dataFromChild.stage = 1;\r\n    dataFromChild.id = taskState.length + 1;\r\n    dispatch({ type: \"ADD_NEW\", payload: dataFromChild });\r\n  };\r\n\r\n  const onUpdatingTask = (dataFromChild) => {\r\n    console.log(dataFromChild)\r\n    dispatch({ type: \"ON_DROP\", payload: dataFromChild });\r\n  };\r\n\r\n  const onDeletingTask = (taskId) => {\r\n    dispatch({ type: \"ON_DELETE\", payload: taskId });\r\n  };\r\n\r\n  const ContextData = {\r\n    taskState,\r\n    onDragStartHandler,\r\n    onDragOverHandler,\r\n    onDropHandler,\r\n    onUpdatingTask,\r\n    onDeletingTask,\r\n    onTaskContainerDragStartHandler,\r\n    onTaskContainerDropHandler,\r\n    onTaskContainerDragOverHandler\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid pt-3\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <NewTask addNewTask={onAddingNewTask}/>\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n            <BoardContext.Provider value={ContextData}>\r\n                <BoardLanes stages={stages}></BoardLanes>\r\n            </BoardContext.Provider>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n"]},"metadata":{},"sourceType":"module"}