{"ast":null,"code":"import _slicedToArray from\"D:\\\\Vrit-tech-task\\\\kanban-board-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useContext,useState,useEffect}from\"react\";import{BoardContext}from\"./Board\";import Lane from\"./Lane\";function BoardLanes(props){var _useContext=useContext(BoardContext),onDragOverHandler=_useContext.onDragOverHandler,onDropHandler=_useContext.onDropHandler,onTaskContainerDragStartHandler=_useContext.onTaskContainerDragStartHandler,onTaskContainerDropHandler=_useContext.onTaskContainerDropHandler,onTaskContainerDragOverHandler=_useContext.onTaskContainerDragOverHandler;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),divWidth=_useState2[0],setDivWidth=_useState2[1];useEffect(function(){var totalWidth=props.stages.length*292+props.stages.length*20;setDivWidth(totalWidth);},[]);return/*#__PURE__*/React.createElement(\"div\",{className:\"column-wrapper\"},/*#__PURE__*/React.createElement(\"div\",{style:{width:divWidth}},props.stages.map(function(stage,index){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"card-column\",key:index,onDragStart:function onDragStart(event){return onTaskContainerDragStartHandler(event,stage.id);},onDragOver:function onDragOver(event){return onTaskContainerDragOverHandler(event);},onDrop:function onDrop(event){return onTaskContainerDropHandler(event,stage.id);}},/*#__PURE__*/React.createElement(\"div\",{className:\"card bg-light\"},/*#__PURE__*/React.createElement(\"div\",{className:\"card-header stage-header\"},/*#__PURE__*/React.createElement(\"h6\",{className:\"card-title text-uppercase text-truncate py-2\"},stage.name)),/*#__PURE__*/React.createElement(\"div\",{className:\"card-body\",onDrop:function onDrop(event){return onDropHandler(event,stage.id);},onDragOver:function onDragOver(event){return onDragOverHandler(event);}},/*#__PURE__*/React.createElement(Lane,{stage:stage,key:stage.id})))),/*#__PURE__*/React.createElement(\"div\",{onDrop:function onDrop(event){return onTaskContainerDropHandler(event,stage.id);}}));})));}export default BoardLanes;","map":{"version":3,"sources":["D:/Vrit-tech-task/kanban-board-react/src/components/Board/BoardLanes.js"],"names":["React","useContext","useState","useEffect","BoardContext","Lane","BoardLanes","props","onDragOverHandler","onDropHandler","onTaskContainerDragStartHandler","onTaskContainerDropHandler","onTaskContainerDragOverHandler","divWidth","setDivWidth","totalWidth","stages","length","width","map","stage","index","event","id","name"],"mappings":"kKAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA,OAASC,YAAT,KAA6B,SAA7B,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,iBAOrBN,UAAU,CAACG,YAAD,CAPW,CAEvBI,iBAFuB,aAEvBA,iBAFuB,CAGvBC,aAHuB,aAGvBA,aAHuB,CAIvBC,+BAJuB,aAIvBA,+BAJuB,CAKvBC,0BALuB,aAKvBA,0BALuB,CAMvBC,8BANuB,aAMvBA,8BANuB,eAQOV,QAAQ,CAAC,CAAD,CARf,wCAQlBW,QARkB,eAQRC,WARQ,eAUzBX,SAAS,CAAC,UAAM,CACd,GAAMY,CAAAA,UAAU,CAAGR,KAAK,CAACS,MAAN,CAAaC,MAAb,CAAsB,GAAtB,CAA4BV,KAAK,CAACS,MAAN,CAAaC,MAAb,CAAsB,EAArE,CACAH,WAAW,CAACC,UAAD,CAAX,CACD,CAHQ,CAGN,EAHM,CAAT,CAKA,mBACE,2BAAK,SAAS,CAAC,gBAAf,eACE,2BAAK,KAAK,CAAE,CAAEG,KAAK,CAAEL,QAAT,CAAZ,EACGN,KAAK,CAACS,MAAN,CAAaG,GAAb,CAAiB,SAACC,KAAD,CAAQC,KAAR,qBAChB,qDACE,2BACE,SAAS,CAAC,aADZ,CAEE,GAAG,CAAEA,KAFP,CAGE,WAAW,CAAE,qBAACC,KAAD,QACXZ,CAAAA,+BAA+B,CAACY,KAAD,CAAQF,KAAK,CAACG,EAAd,CADpB,EAHf,CAME,UAAU,CAAE,oBAACD,KAAD,QAAWV,CAAAA,8BAA8B,CAACU,KAAD,CAAzC,EANd,CAOE,MAAM,CAAE,gBAACA,KAAD,QAAWX,CAAAA,0BAA0B,CAACW,KAAD,CAAQF,KAAK,CAACG,EAAd,CAArC,EAPV,eASE,2BAAK,SAAS,CAAC,eAAf,eACE,2BAAK,SAAS,CAAC,0BAAf,eACE,0BAAI,SAAS,CAAC,8CAAd,EACGH,KAAK,CAACI,IADT,CADF,CADF,cAME,2BACE,SAAS,CAAC,WADZ,CAEE,MAAM,CAAE,gBAACF,KAAD,QAAWb,CAAAA,aAAa,CAACa,KAAD,CAAQF,KAAK,CAACG,EAAd,CAAxB,EAFV,CAGE,UAAU,CAAE,oBAACD,KAAD,QAAWd,CAAAA,iBAAiB,CAACc,KAAD,CAA5B,EAHd,eAKE,oBAAC,IAAD,EAAM,KAAK,CAAEF,KAAb,CAAoB,GAAG,CAAEA,KAAK,CAACG,EAA/B,EALF,CANF,CATF,CADF,cAyBE,2BACE,MAAM,CAAE,gBAACD,KAAD,QAAWX,CAAAA,0BAA0B,CAACW,KAAD,CAAQF,KAAK,CAACG,EAAd,CAArC,EADV,EAzBF,CADgB,EAAjB,CADH,CADF,CADF,CAqCD,CAED,cAAejB,CAAAA,UAAf","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport { BoardContext } from \"./Board\";\r\nimport Lane from \"./Lane\";\r\nfunction BoardLanes(props) {\r\n  const {\r\n    onDragOverHandler,\r\n    onDropHandler,\r\n    onTaskContainerDragStartHandler,\r\n    onTaskContainerDropHandler,\r\n    onTaskContainerDragOverHandler,\r\n  } = useContext(BoardContext);\r\n  const [divWidth, setDivWidth] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const totalWidth = props.stages.length * 292 + props.stages.length * 20;\r\n    setDivWidth(totalWidth);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"column-wrapper\">\r\n      <div style={{ width: divWidth }}>\r\n        {props.stages.map((stage, index) => (\r\n          <>\r\n            <div\r\n              className=\"card-column\"\r\n              key={index}\r\n              onDragStart={(event) =>\r\n                onTaskContainerDragStartHandler(event, stage.id)\r\n              }\r\n              onDragOver={(event) => onTaskContainerDragOverHandler(event)}\r\n              onDrop={(event) => onTaskContainerDropHandler(event, stage.id)}\r\n            >\r\n              <div className=\"card bg-light\">\r\n                <div className=\"card-header stage-header\">\r\n                  <h6 className=\"card-title text-uppercase text-truncate py-2\">\r\n                    {stage.name}\r\n                  </h6>\r\n                </div>\r\n                <div\r\n                  className=\"card-body\"\r\n                  onDrop={(event) => onDropHandler(event, stage.id)}\r\n                  onDragOver={(event) => onDragOverHandler(event)}\r\n                >\r\n                  <Lane stage={stage} key={stage.id} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              onDrop={(event) => onTaskContainerDropHandler(event, stage.id)}\r\n            ></div>\r\n          </>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BoardLanes;\r\n"]},"metadata":{},"sourceType":"module"}