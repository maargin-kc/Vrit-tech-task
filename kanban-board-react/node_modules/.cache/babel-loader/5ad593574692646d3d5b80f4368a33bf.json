{"ast":null,"code":"import _slicedToArray from\"D:\\\\Vrit-tech-task\\\\kanban-board-react\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import{Button}from\"react-bootstrap\";import TaskForm from\"./TaskForm\";var initialValues={title:\"\",description:\"\",startDate:new Date(),endDate:new Date()};function NewTask(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),show=_useState2[0],setShow=_useState2[1];var handleClose=function handleClose(){return setShow(false);};var handleShow=function handleShow(){setShow(true);};useEffect(function(){},[]);var onSubmit=function onSubmit(values,submitProps){submitProps.setSubmitting(false);props.addNewTask(values);setShow(false);submitProps.resetForm();};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{variant:\"success\",onClick:handleShow},\"New Task\"),/*#__PURE__*/React.createElement(TaskForm,{taskState:\"New\",show:show,handleClose:handleClose,initialValues:initialValues,onSubmit:onSubmit}));}export default NewTask;","map":{"version":3,"sources":["D:/Vrit-tech-task/kanban-board-react/src/components/Board/New Task/NewTask.js"],"names":["React","useState","useEffect","Button","TaskForm","initialValues","title","description","startDate","Date","endDate","NewTask","props","show","setShow","handleClose","handleShow","onSubmit","values","submitProps","setSubmitting","addNewTask","resetForm"],"mappings":"kKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,MAAT,KAAuB,iBAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAEA,GAAMC,CAAAA,aAAa,CAAG,CACpBC,KAAK,CAAE,EADa,CAEpBC,WAAW,CAAE,EAFO,CAGpBC,SAAS,CAAE,GAAIC,CAAAA,IAAJ,EAHS,CAIpBC,OAAO,CAAE,GAAID,CAAAA,IAAJ,EAJW,CAAtB,CAOA,QAASE,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,eACEX,QAAQ,CAAC,KAAD,CADV,wCACfY,IADe,eACTC,OADS,eAEtB,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAMD,CAAAA,OAAO,CAAC,KAAD,CAAb,EAApB,CACA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CACvBF,OAAO,CAAC,IAAD,CAAP,CACD,CAFD,CAIAZ,SAAS,CAAC,UAAM,CAAE,CAAT,CAAW,EAAX,CAAT,CAEA,GAAMe,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,MAAD,CAASC,WAAT,CAAyB,CACxCA,WAAW,CAACC,aAAZ,CAA0B,KAA1B,EACAR,KAAK,CAACS,UAAN,CAAiBH,MAAjB,EACAJ,OAAO,CAAC,KAAD,CAAP,CACAK,WAAW,CAACG,SAAZ,GACD,CALD,CAOA,mBACE,qDACE,oBAAC,MAAD,EAAQ,OAAO,CAAC,SAAhB,CAA0B,OAAO,CAAEN,UAAnC,aADF,cAIE,oBAAC,QAAD,EAAU,SAAS,CAAC,KAApB,CAA0B,IAAI,CAAEH,IAAhC,CAAsC,WAAW,CAAEE,WAAnD,CAAgE,aAAa,CAAEV,aAA/E,CAA8F,QAAQ,CAAEY,QAAxG,EAJF,CADF,CAQD,CAED,cAAeN,CAAAA,OAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport TaskForm from \"./TaskForm\";\r\n\r\nconst initialValues = {\r\n  title: \"\",\r\n  description: \"\",\r\n  startDate: new Date(),\r\n  endDate: new Date(),\r\n};\r\n\r\nfunction NewTask(props) {\r\n  const [show, setShow] = useState(false);\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => {\r\n    setShow(true);\r\n  };\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const onSubmit = (values, submitProps) => {\r\n    submitProps.setSubmitting(false);\r\n    props.addNewTask(values);\r\n    setShow(false);\r\n    submitProps.resetForm();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"success\" onClick={handleShow}>\r\n        New Task\r\n      </Button>\r\n      <TaskForm taskState='New' show={show} handleClose={handleClose} initialValues={initialValues} onSubmit={onSubmit}></TaskForm>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NewTask;\r\n"]},"metadata":{},"sourceType":"module"}